parameters:
- name: cloud
  brief: Cloud
  kind: user
  parameters:
  - name: kind
    value: aws
  - name: region
    fromEnv: AWS_REGION
- name: dns
  brief: DNS
  kind: user
  parameters:
  - name: domain
    brief: Fully qualified domain name of the stack (FQDN)
    fromEnv: HUB_DOMAIN_NAME
  - name: name
    brief: Stack name (first part of stack FQDN)
    fromEnv: HUB_STACK_NAME
  # - name: baseDomain
  #   brief: DNS base domain
  #   fromEnv: BASE_DOMAIN
  #   default: devops.delivery
- name: component.storage-class.name
  value: default
- name: terraform.bucket
  brief: Terraform state location
  parameters:
  - name: name
    brief: Name of the bucket to store deployment state
    fromEnv: HUB_STATE_BUCKET
  - name: region
    brief: Region of the bucket to store deployment state
    fromEnv: HUB_STATE_REGION
- name: component.ingress
  parameters:
  - name: dashboard
    value: 'true'
  - name: ssoUrlPrefix
    value: apps
  - name: urlPrefix
    value: app
- name: component.istio
  parameters:
  - name: version.release
    value: 1.3.8
  - name: prometheus.enabled
    # this parameter is deprecated
    # it will be removed in the future
    value: "true"

  - name: ingressGateway
    value: ingressgateway
    component: istio
  - name: ingressGateway
    value: kubeflow-ingressgateway
    component: kubeflow-ingressgateway
  - name: ingressGateway
    value: kubeflow-ingressgateway
    component: kubeflow

- name: component.kubeflow
  parameters:
  - name: name
    value: kubeflow
  - name: namespace
    value: ${component.kubeflow.name}
  - name: profile.name
    value: workspace
  - name: profile.owner.username
    value: ${component.dex.passwordDb.email}
- name: component.minio
  kind: user
  parameters:
  - name: name
    value: buckets
  - name: namespace
    value: ${component.kubeflow.name}-data
  - name: accessKey
    brief: Minio Access Key ID (at least 5 symbols)
    fromEnv: COMPONENT_MINIO_ACCESS_KEY
  - name: secretKey
    brief: Minio Secret Key ID (at least 8 symbols)
    fromEnv: COMPONENT_MINIO_SECRET_KEY
  - name: region
    value: ${cloud.region}
  - name: default.bucket.name
    value: ${component.kubeflow.name}-pipelines

# consumed by kubeflow
- name: component.bucket
  component: kubeflow
  parameters:
  - name: accessKey
    value: ${component.minio.accessKey}
  - name: secretKey
    value: ${component.minio.secretKey}
  - name: name
    value: ${component.minio.default.bucket.name}

- name: component.mysql
  kind: user
  parameters:
  - name: namespace
    value: ${component.kubeflow.name}-data
  - name: databasee
    value: mlpipeline
  - name: rootPassword
    brief: MySQL root password
    fromEnv: COMPONENT_MYSQL_ROOT_PASSWORD
  - name: user
    brief: MySQL user name
    fromEnv: COMPONENT_MYSQL_USER
    default: mysql
  - name: password
    brief: MySQL user password  
    fromEnv: COMPONENT_MYSQL_PASSWORD
  - name: volumeSize
    value: 8Gi

- name: component.mysql.user
  component: kubeflow
  value: root
- name: component.mysql.password
  component: kubeflow
  value: ${component.mysql.rootPassword}
    # value: 7b4cc3facd9f408baf685d068c850bd8

- name: component.bucket.endpoint
  component: kubeflow
  value: http://${component.minio.name}.${component.minio.namespace}.svc.cluster.local:9000
- name: component.bucket.endpoint
  component: s3-flex-pvc
  value: http://${component.minio.name}.${component.minio.namespace}.svc.cluster.local:9000

- name: component.kubernetes-dashboard
  parameters:
  - name: rbac.kind
    value: read-only
    # value: admin

- name: component.prometheus
  parameters:
  - name: prometheus.volumeSize
    value: 12Gi
  - name: prometheus.retention
    value: 4h

- name: component.external-dns.interval
  value: 3m
- name: component.s3flex
  parameters:
  - name: driver.namespace
    value: ${component.kubeflow.name}-data
  - name: pvc.namespace
    value: workspace
    # value: ${component.kubeflow.namespace}

- name: component.dex
  parameters:
  - name: issuer
    value: https://auth.${dns.domain}
  - name: namespace
    value: kube-system
  - name: passwordDb.email
    brief: Admin user email (to login with Dex)
    fromEnv: COMPONENT_DEX_PASSWORD_DB_EMAIL
    default: support@agilestacks.com
    empty: allow
  - name: passwordDb.password
    brief: Admin user password (to login with Dex)
    fromEnv: COMPONENT_DEX_PASSWORD_DB_PASSWORD
    empty: allow

outputs:
- name: component.kubeflow.url
  brief: Kubeflow Central Dashboard
- name: component.minio.url
  brief: Minio Endpoint
- name: component.istio.kiali.url
  brief: Istio Kiali
- name: component.prometheus.url
  brief: Prometheus Dashboard
- name: component.ingress.dashboard.url
  brief: Traefik Dashboard
- name: component.kubernetes-dashboard.url
  brief: Kubernetes Dashboard
